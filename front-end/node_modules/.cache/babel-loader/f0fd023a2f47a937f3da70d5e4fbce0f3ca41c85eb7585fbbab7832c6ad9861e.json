{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sutha\\\\OneDrive\\\\Documents\\\\GitHub\\\\financial-dashboard\\\\front-end\\\\src\\\\components\\\\Microsoft.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, RadialLinearScale, PointElement, LineElement, Filler, Tooltip, Legend } from 'chart.js';\nimport { Radar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(RadialLinearScale, PointElement, LineElement, Filler, Tooltip, Legend);\nfunction RadarChart() {\n  const data = {\n    labels: ['Payout Ratio', 'Forward P/E', 'Trailing P/E', 'Short Ratio', 'Quick Ratio', 'Current Ratio', 'PEG Ratio'],\n    datasets: [{\n      label: 'Microsoft Ratios',\n      data: [0.2477, 28.43, 35.37, 3.28, 1.163, 1.301, 2.2141],\n      backgroundColor: 'rgba(75, 107, 251, 0.2)',\n      borderColor: 'rgba(75, 107, 251, 1)',\n      borderWidth: 2\n    }]\n  };\n  const options = {\n    responsive: true,\n    scales: {\n      r: {\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Radar, {\n    data: data,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n}\n_c = RadarChart;\nexport function MicrosoftMain() {\n  _s();\n  const [keyData, setKeyData] = useState({});\n  useEffect(() => {\n    fetchKeyData();\n  }, []);\n  const fetchKeyData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/Key');\n      const data = await response.json();\n      setKeyData(data);\n    } catch (error) {\n      console.error('Error fetching key data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"big\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metrics-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"company-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Microsoft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"MSFT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metrics-row\",\n        children: [/*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"STOCK PRICE\",\n          value: keyData.currentprice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"DIVIDEND RATE\",\n          value: keyData.dividendrate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"BID-ASK SPREAD\",\n          value: keyData.bidaskspread\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"52 WEEK HIGH\",\n          value: keyData.fiftytwoweekhigh\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"52 WEEK LOW\",\n          value: keyData.fiftytwoweeklow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetricCard, {\n          title: \"PEG RATIO\",\n          value: keyData.pegratio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '500px',\n        margin: '20px auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(RadarChart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(MicrosoftMain, \"avWGyvBs4FlANXpusJ9ZE/Ir+Mw=\");\n_c2 = MicrosoftMain;\nfunction MetricCard({\n  title,\n  value\n}) {\n  const formatValue = val => {\n    if (!val) return 'Loading...';\n    const numValue = parseFloat(val);\n    return isNaN(numValue) ? val : `$${numValue.toFixed(2)}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"metric-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: formatValue(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_c3 = MetricCard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"RadarChart\");\n$RefreshReg$(_c2, \"MicrosoftMain\");\n$RefreshReg$(_c3, \"MetricCard\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","RadialLinearScale","PointElement","LineElement","Filler","Tooltip","Legend","Radar","jsxDEV","_jsxDEV","register","RadarChart","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","scales","r","beginAtZero","fileName","_jsxFileName","lineNumber","columnNumber","_c","MicrosoftMain","_s","keyData","setKeyData","fetchKeyData","response","fetch","json","error","console","className","children","MetricCard","title","value","currentprice","dividendrate","bidaskspread","fiftytwoweekhigh","fiftytwoweeklow","pegratio","style","width","margin","_c2","formatValue","val","numValue","parseFloat","isNaN","toFixed","_c3","$RefreshReg$"],"sources":["C:/Users/sutha/OneDrive/Documents/GitHub/financial-dashboard/front-end/src/components/Microsoft.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  RadialLinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Filler,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Radar } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  RadialLinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Filler,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nfunction RadarChart() {\r\n  const data = {\r\n    labels: [\r\n      'Payout Ratio',\r\n      'Forward P/E',\r\n      'Trailing P/E',\r\n      'Short Ratio',\r\n      'Quick Ratio',\r\n      'Current Ratio',\r\n      'PEG Ratio'\r\n    ],\r\n    datasets: [{\r\n      label: 'Microsoft Ratios',\r\n      data: [0.2477, 28.43, 35.37, 3.28, 1.163, 1.301, 2.2141],\r\n      backgroundColor: 'rgba(75, 107, 251, 0.2)',\r\n      borderColor: 'rgba(75, 107, 251, 1)',\r\n      borderWidth: 2,\r\n    }]\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    scales: {\r\n      r: {\r\n        beginAtZero: true\r\n      }\r\n    }\r\n  };\r\n\r\n  return <Radar data={data} options={options} />;\r\n}\r\n\r\nexport function MicrosoftMain() {\r\n  const [keyData, setKeyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchKeyData();\r\n  }, []);\r\n\r\n  const fetchKeyData = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/Key');\r\n      const data = await response.json();\r\n      setKeyData(data);\r\n    } catch (error) {\r\n      console.error('Error fetching key data:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"big\">\r\n      <div className=\"metrics-container\">\r\n        <div className=\"company-logo\">\r\n          <div className=\"logo-container\">\r\n            <h2>Microsoft</h2>\r\n            <p>MSFT</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"metrics-row\">\r\n          <MetricCard title=\"STOCK PRICE\" value={keyData.currentprice} />\r\n          <MetricCard title=\"DIVIDEND RATE\" value={keyData.dividendrate} />\r\n          <MetricCard title=\"BID-ASK SPREAD\" value={keyData.bidaskspread} />\r\n          <MetricCard title=\"52 WEEK HIGH\" value={keyData.fiftytwoweekhigh} />\r\n          <MetricCard title=\"52 WEEK LOW\" value={keyData.fiftytwoweeklow} />\r\n          <MetricCard title=\"PEG RATIO\" value={keyData.pegratio} />\r\n        </div>\r\n      </div>\r\n      <div style={{ width: '500px', margin: '20px auto' }}>\r\n        <RadarChart />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MetricCard({ title, value }) {\r\n  const formatValue = (val) => {\r\n    if (!val) return 'Loading...';\r\n    const numValue = parseFloat(val);\r\n    return isNaN(numValue) ? val : `$${numValue.toFixed(2)}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"metric-card\">\r\n      <h3>{title}</h3>\r\n      <p>{formatValue(value)}</p>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}